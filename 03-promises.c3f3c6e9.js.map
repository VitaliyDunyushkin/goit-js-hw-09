{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAc,CAAEC,SAAAN,EAAUO,MAAAN,GAEhB,IAAIO,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLT,EACFO,EAAQJ,GAERK,EAAOL,EAAY,GAEpBJ,EAAM,IAIRW,MAAK,EAACN,SAAEA,EAAQC,MAAEA,MACjBV,EAAAgB,OAAOC,QAAQ,uBAAqBR,QAAiBC,OAAW,IAEjEQ,OAAM,EAACT,SAAEA,EAAQC,MAAEA,MAClBV,EAAAgB,OAAOG,QAAQ,sBAAoBV,QAAiBC,OAAW,G,CA3CxDU,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MACEC,UAAUf,MAAEA,EAAKgB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAInB,EAAW,EACXoB,EAAanB,EAAMoB,cACnBC,EAAYF,EAAaH,EAAKI,cAElC5B,EAAcO,EAAUoB,GAExB,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAOM,MAAOD,GAAK,EACtCvB,GAAY,EACZP,EAAcO,EAAUsB,GACxBA,GAAaL,EAAKI,a","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let position = 1;\n  let firstDelay = delay.valueAsNumber;\n  let nextDelay = firstDelay + step.valueAsNumber;\n\n  createPromise(position, firstDelay);\n\n  for (let i = 2; i <= amount.value; i += 1) {\n    position += 1;\n    createPromise(position, nextDelay);\n    nextDelay += step.valueAsNumber;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promiseData = { position, delay };\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(promiseData);\n      } else {\n        reject(promiseData);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n    });\n\n  // promise\n  //   .then(({ position, delay }) => {\n  //     console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n  //   })\n  //   .catch(({ position, delay }) => {\n  //     console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n  //   });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","promiseData","position","delay","Promise","resolve","reject","setTimeout","then","Notify","success","catch","failure","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","firstDelay","valueAsNumber","nextDelay","i","value"],"version":3,"file":"03-promises.c3f3c6e9.js.map"}